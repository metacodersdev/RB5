{"version":3,"file":"reviewRequestEditorView.js","names":["BannerView","Backbone","View","extend","className","title","subtitle","actions","showChangesField","describeText","fieldOptions","descriptionFieldID","descriptionFieldName","descriptionFieldHTML","descriptionFieldClasses","showSendEmail","DescriptionFieldViewType","RB","ReviewRequestFields","ChangeDescriptionFieldView","template","_","initialize","options","reviewRequestEditorView","reviewRequestEditor","model","reviewRequest","get","$buttons","render","readOnly","UserSession","instance","$el","children","length","html","sendEmailText","field","el","$","fieldID","addFieldView","on","prop","ClosedBannerView","CloseDescriptionFieldView","id","label","closeType","undefined","events","push","join","prototype","apply","arguments","_onReopenClicked","reopen","catch","err","alert","message","DiscardedBannerView","ReviewRequest","CLOSE_DISCARDED","SubmittedBannerView","CLOSE_SUBMITTED","DraftBannerView","_newDraftTemplate","_onPublishDraftClicked","$sendEmail","publishDraft","trivial","is","_onDiscardDraftClicked","e","preventDefault","stopPropagation","draft","destroy","_onCloseDiscardedClicked","close","type","interdiffLink","append","newDiffText","showChangesText","ReviewRequestEditorView","defaultFields","fieldName","selector","useEditIconOnly","allowMarkdown","_archiveActionsTemplate","bindAll","_fieldViews","_fileAttachmentThumbnailViews","rendered","banner","_$main","_$extra","_blockResizeLayout","view","listenTo","_scheduleResizeLayout","_$warning","delay","fadeOut","hide","errorText","show","showBanner","getFieldView","fileAttachments","_$box","_$screenshots","_$attachments","_$attachmentsContainer","parent","_$bannersContainer","_updateArchiveVisibility","DnDUploader","registerDropTarget","_uploadFile","bind","find","remove","each","fileAttachment","buildFileAttachmentThumbnail","noAnimation","attr","index","findIndex","splice","_importScreenshotThumbnail","_importFileAttachmentThumbnail","hasOwnProperty","window","resize","_checkResizeLayout","_setupActions","enable","_refreshPage","onbeforeunload","_onBeforeUnload","evt","msg","event","returnValue","state","BannerClass","PENDING","$existingBanner","console","assert","appendTo","fields","Object","values","filter","needsSave","set","publishing","pendingSaveCount","forEach","finishSave","file","createFileAttachment","save","$closeDiscarded","$closeSubmitted","$deletePermanently","$updateDiff","$uploadFile","click","_onCloseSubmittedClicked","_onDeleteReviewRequestClicked","_onUpdateDiffClicked","_onUploadFileClicked","ReviewRequestActionHook","hook","handler","collection","fileAttachmentComments","$thumbnail","FileAttachmentThumbnail","comments","renderThumbnail","canEdit","indexOf","insertBefore","eq","fadeIn","not","addClass","removeClass","incr","decr","DraftReviewBannerView","thumbnailEl","data","$caption","hasClass","text","add","screenshot","createScreenshot","ScreenshotThumbnail","_resizeLayout","$lastContent","$lastFieldContainer","$lastField","lastFieldView","lastContentTop","Math","ceil","position","top","editor","inlineEditorView","textEditor","detailsWidth","detailsPadding","$detailsBody","$detailsLabels","$detailsValues","css","outerWidth","height","setSize","offset","outerHeight","contentHeight","editing","newEditableHeight","getExtents","throttleLayout","defer","confirmText","confirm","trigger","submit","$dlg","modalBox","buttons","then","_navigateTo","SITE_ROOT","url","location","updateDiffView","UpdateDiffView","UploadDiffModel","changeNumber","repository","uploadDialog","UploadAttachmentView","_onArchiveClicked","_updateArchiveState","archivedReviewRequests","VISIBILITY_ARCHIVED","_onUnarchiveClicked","VISIBILITY_VISIBLE","_onMuteClicked","mutedReviewRequests","VISIBILITY_MUTED","_onUnmuteClicked","newState","addImmediately","removeImmediately","visibility","archiveText","muteText","unarchiveText","unmuteText","visible","iconClass","iconTitle","iconId"],"sources":["../../../../../static/rb/js/views/reviewRequestEditorView.es6.js"],"sourcesContent":["(function() {\n\n\n/**\n * Base class for review request banners.\n *\n * This will render a banner based on the data provided by subclasses,\n * and handle actions and editing of text fields.\n */\nconst BannerView = Backbone.View.extend({\n    className: 'banner',\n    title: '',\n    subtitle: '',\n    actions: [],\n    showChangesField: true,\n    describeText: '',\n    fieldOptions: {},\n    descriptionFieldID: 'change_description',\n    descriptionFieldName: null,\n    descriptionFieldHTML: '',\n    descriptionFieldClasses: '',\n    showSendEmail: false,\n    DescriptionFieldViewType: RB.ReviewRequestFields.ChangeDescriptionFieldView,\n\n    template: _.template(dedent`\n        <h1><%- title %></h1>\n        <% if (subtitle) { %>\n        <p><%- subtitle %></p>\n        <% } %>\n        <span class=\"banner-actions\">\n        <% _.each(actions, function(action) { %>\n         <input type=\"button\" id=\"<%= action.id %>\"\n                value=\"<%- action.label %>\" />\n        <% }); %>\n        <% if (showSendEmail) { %>\n         <label>\n          <input type=\"checkbox\" class=\"send-email\" checked />\n          <%- sendEmailText %>\n        </label>\n        <% } %>\n        </span>\n        <% if (showChangesField) { %>\n         <p><label for=\"field_<%- descriptionFieldID %>\"><%- describeText %></label></p>\n         <pre id=\"field_<%- descriptionFieldID %>\"\n              class=\"field field-text-area <%- descriptionFieldClasses %>\"\n              data-field-id=\"field_<%- descriptionFieldID %>\"\n              ><%= descriptionFieldHTML %></pre>\n        <% } %>\n        `),\n\n    /**\n     * Initialize the banner.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the banner.\n     *\n     * Option Args:\n     *     reviewRequestEditorView (RB.ReviewRequestEditorView):\n     *         The review request editor.\n     */\n    initialize(options) {\n        this.reviewRequestEditorView = options.reviewRequestEditorView;\n        this.reviewRequestEditor = this.reviewRequestEditorView.model;\n        this.reviewRequest = this.reviewRequestEditor.get('reviewRequest');\n        this.$buttons = null;\n    },\n\n    /**\n     * Render the banner.\n     *\n     * If there's an existing banner on the page, from the generated\n     * template, then this will make use of that template. Otherwise,\n     * it will construct a new one.\n     *\n     * Returns:\n     *     BannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        const readOnly = RB.UserSession.instance.get('readOnly');\n\n        if (this.$el.children().length === 0) {\n            this.$el.html(this.template({\n                title: this.title,\n                subtitle: this.subtitle,\n                actions: readOnly ? [] : this.actions,\n                showChangesField: this.showChangesField && !readOnly,\n                describeText: this.describeText,\n                descriptionFieldID: this.descriptionFieldID,\n                descriptionFieldHTML: this.descriptionFieldHTML,\n                descriptionFieldClasses: this.descriptionFieldClasses,\n                showSendEmail: this.showSendEmail,\n                sendEmailText: gettext('Send E-Mail'),\n            }));\n        }\n\n        if (this.DescriptionFieldViewType) {\n            this.field = new this.DescriptionFieldViewType({\n                el: this.$(`#field_${this.descriptionFieldID}`),\n                fieldID: this.descriptionFieldID,\n                model: this.reviewRequestEditor,\n            });\n\n            this.reviewRequestEditorView.addFieldView(this.field);\n        }\n\n        this.$buttons = this.$('input');\n\n        this.reviewRequestEditor.on(\n            'saving destroying',\n            () => this.$buttons.prop('disabled', true));\n\n        this.reviewRequestEditor.on(\n            'saved saveFailed destroyed',\n            () => this.$buttons.prop('disabled', false));\n\n        return this;\n    },\n});\n\n\n/**\n * Base class for a banner representing a closed review request.\n *\n * This provides a button for reopening the review request. It's up\n * to subclasses to provide the other details.\n */\nconst ClosedBannerView = BannerView.extend({\n    descriptionFieldID: 'close_description',\n    descriptionFieldName: 'closeDescription',\n    DescriptionFieldViewType: RB.ReviewRequestFields.CloseDescriptionFieldView,\n\n    actions: [\n        {\n            id: 'btn-review-request-reopen',\n            label: gettext('Reopen for Review'),\n        },\n    ],\n\n    closeType: undefined,\n\n    events: {\n        'click #btn-review-request-reopen': '_onReopenClicked',\n    },\n\n    /**\n     * Render the banner.\n     *\n     * Returns:\n     *     ClosedBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        const descriptionFieldClasses = [];\n\n        if (this.reviewRequestEditor.get('statusMutableByUser')) {\n            descriptionFieldClasses.push('editable');\n        }\n\n        if (this.reviewRequest.get('closeDescriptionRichText')) {\n            descriptionFieldClasses.push('rich-text');\n        }\n\n        this.descriptionFieldClasses = descriptionFieldClasses.join(' ');\n        this.descriptionFieldHTML =\n            this.reviewRequestEditor.get('closeDescriptionRenderedText');\n\n        BannerView.prototype.render.apply(this, arguments);\n\n        this.field.closeType = this.closeType;\n\n        return this;\n    },\n\n    /**\n     * Handle a click on \"Reopen for Review\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onReopenClicked() {\n        this.reviewRequest.reopen()\n            .catch(err => alert(err.message));\n\n        return false;\n    },\n});\n\n\n/**\n * A banner representing a discarded review request.\n */\nconst DiscardedBannerView = ClosedBannerView.extend({\n    id: 'discard-banner',\n    title: gettext('This change has been discarded.'),\n    describeText: gettext(\"Describe the reason it's discarded (optional):\"),\n    closeType: RB.ReviewRequest.CLOSE_DISCARDED,\n});\n\n\n/**\n * A banner representing a submitted review request.\n */\nconst SubmittedBannerView = ClosedBannerView.extend({\n    id: 'submitted-banner',\n    title: gettext('This change has been marked as submitted.'),\n    describeText: gettext('Describe the submission (optional):'),\n    closeType: RB.ReviewRequest.CLOSE_SUBMITTED,\n});\n\n\n/**\n * A banner representing a draft of a review request.\n *\n * Depending on the public state of the review request, this will\n * show different text and a different set of buttons.\n */\nconst DraftBannerView = BannerView.extend({\n    id: 'draft-banner',\n    title: gettext('This review request is a draft.'),\n    subtitle: gettext('Be sure to publish when finished.'),\n    describeText: gettext('Describe your changes (optional):'),\n    descriptionFieldID: 'change_description',\n    descriptionFieldName: 'changeDescription',\n\n    _newDraftTemplate: _.template(dedent`\n        <div class=\"interdiff-link\">\n         <%- newDiffText %>\n         <a href=\"<%- interdiffLink %>\"><%- showChangesText %></a>\n        </div>\n        `),\n\n    events: {\n        'click #btn-draft-publish': '_onPublishDraftClicked',\n        'click #btn-draft-discard': '_onDiscardDraftClicked',\n        'click #btn-review-request-discard': '_onCloseDiscardedClicked',\n    },\n\n    /**\n     * Initialize the banner.\n     */\n    initialize() {\n        BannerView.prototype.initialize.apply(this, arguments);\n\n        if (this.reviewRequest.get('public')) {\n            this.showSendEmail = this.reviewRequestEditor.get('showSendEmail');\n            this.title = gettext('This review request is a draft.');\n            this.actions = [\n                {\n                    id: 'btn-draft-publish',\n                    label: gettext('Publish Changes'),\n                },\n                {\n                    id: 'btn-draft-discard',\n                    label: gettext('Discard Draft'),\n                },\n            ];\n        } else {\n            this.showChangesField = false;\n            this.actions = [\n                {\n                    id: 'btn-draft-publish',\n                    label: gettext('Publish'),\n                },\n                {\n                    id: 'btn-review-request-discard',\n                    label: gettext('Discard Review Request'),\n                },\n            ];\n        }\n    },\n\n    /**\n     * Handle a click on \"Publish Changes\".\n     *\n     * Begins publishing the review request. If there are any field editors\n     * still open, they'll be saved first.\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onPublishDraftClicked() {\n        const $sendEmail = this.$('.send-email');\n\n        this.reviewRequestEditorView.publishDraft({\n            trivial: ($sendEmail.length === 1 && !$sendEmail.is(':checked')),\n        });\n\n        return false;\n    },\n\n    /**\n     * Handle a click on \"Discard Draft\".\n     *\n     * Discards the draft of the review request.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    async _onDiscardDraftClicked(e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        try {\n            await this.reviewRequest.draft.destroy();\n        } catch (err) {\n            alert(err.message);\n        }\n    },\n\n    /**\n     * Handle a click on \"Discard Review Request\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onCloseDiscardedClicked() {\n        this.reviewRequest\n            .close({\n                type: RB.ReviewRequest.CLOSE_DISCARDED,\n            })\n            .catch(err => alert(err.message));\n\n        return false;\n    },\n\n    /**\n     * Render the banner.\n     *\n     * Returns:\n     *     DraftBannerView:\n     *     This object, for chaining.\n     */\n    render() {\n        const descriptionFieldClasses = [];\n\n        if (this.reviewRequestEditor.get('mutableByUser')) {\n            descriptionFieldClasses.push('editable');\n        }\n\n        const draft = this.reviewRequest.draft;\n\n        if (draft.get('changeDescriptionRichText')) {\n            descriptionFieldClasses.push('rich-text');\n        }\n\n        this.descriptionFieldClasses = descriptionFieldClasses.join(' ');\n        this.descriptionFieldHTML =\n            this.reviewRequestEditor.get('changeDescriptionRenderedText');\n\n        BannerView.prototype.render.apply(this, arguments);\n\n        const interdiffLink = draft.get('interdiffLink');\n\n        if (interdiffLink) {\n            this.$el.append(this._newDraftTemplate({\n                newDiffText: gettext('This draft adds a new diff.'),\n                showChangesText: gettext('Show changes'),\n                interdiffLink: interdiffLink,\n            }));\n        }\n\n        return this;\n    },\n});\n\n\n/**\n * Manages the user-visible state of an editable review request.\n *\n * This owns the fields, thumbnails, banners, and general interaction\n * around editing a review request.\n */\nRB.ReviewRequestEditorView = Backbone.View.extend({\n    defaultFields: [\n        {\n            fieldID: 'branch',\n        },\n        {\n            fieldID: 'bugs_closed',\n            fieldName: 'bugsClosed',\n            selector: '#field_bugs_closed',\n            useEditIconOnly: true,\n        },\n        {\n            fieldID: 'depends_on',\n            fieldName: 'dependsOn',\n            useEditIconOnly: true,\n        },\n        {\n            fieldID: 'description',\n            allowMarkdown: true,\n        },\n        {\n            fieldID: 'summary',\n        },\n        {\n            fieldID: 'submitter',\n            fieldName: 'submitter',\n            useEditIconOnly: true,\n        },\n        {\n            fieldID: 'target_groups',\n            fieldName: 'targetGroups',\n            useEditIconOnly: true,\n        },\n        {\n            fieldID: 'target_people',\n            fieldName: 'targetPeople',\n            useEditIconOnly: true,\n        },\n        {\n            fieldID: 'testing_done',\n            fieldName: 'testingDone',\n            allowMarkdown: true,\n        },\n    ],\n\n    events: {\n        'click #archive-review-request-link': '_onArchiveClicked',\n        'click #unarchive-review-request-link': '_onUnarchiveClicked',\n        'click #mute-review-request-link': '_onMuteClicked',\n        'click #unmute-review-request-link': '_onUnmuteClicked',\n        'click #toggle-unarchived': '_onUnarchiveClicked',\n        'click #toggle-archived': '_onArchiveClicked',\n    },\n\n    _archiveActionsTemplate: _.template(dedent`\n        <% if (visibility === RB.ReviewRequest.VISIBILITY_VISIBLE) { %>\n         <li><a id=\"archive-review-request-link\" href=\"#\"><%- archiveText %></a></li>\n         <li><a id=\"mute-review-request-link\" href=\"#\"><%- muteText %></a></li>\n        <% } else if (visibility === RB.ReviewRequest.VISIBILITY_ARCHIVED) { %>\n         <li><a id=\"unarchive-review-request-link\" href=\"#\"><%- unarchiveText %></a></li>\n        <% } else if (visibility === RB.ReviewRequest.VISIBILITY_MUTED) { %>\n         <li><a id=\"unmute-review-request-link\" href=\"#\"><%- unmuteText %></a></li>\n        <% } %>\n        `),\n\n    /**\n     * Initialize the view.\n     */\n    initialize() {\n        _.bindAll(this, '_checkResizeLayout', '_scheduleResizeLayout',\n                  '_onCloseDiscardedClicked', '_onCloseSubmittedClicked',\n                  '_onDeleteReviewRequestClicked', '_onUpdateDiffClicked',\n                  '_onArchiveClicked', '_onUnarchiveClicked',\n                  '_onMuteClicked', '_onUnmuteClicked', '_onUploadFileClicked');\n\n        this._fieldViews = {};\n        this._fileAttachmentThumbnailViews = [];\n        this.rendered = false;\n\n        this.draft = this.model.get('reviewRequest').draft;\n        this.banner = null;\n        this._$main = null;\n        this._$extra = null;\n        this._blockResizeLayout = false;\n    },\n\n    /**\n     * Add a view for a field in the review request.\n     *\n     * Args:\n     *     view (RB.ReviewRequestFields.BaseFieldView):\n     *         The view which handles editing for the field.\n     */\n    addFieldView(view) {\n        this._fieldViews[view.fieldID] = view;\n        view.reviewRequestEditorView = this;\n\n        this.listenTo(view, 'resize', this._scheduleResizeLayout);\n        this.listenTo(view, 'fieldError', err => {\n            this._$warning\n                .delay(6000)\n                .fadeOut(400, () => this._$warning.hide())\n                .html(err.errorText)\n                .show();\n        });\n        this.listenTo(view, 'fieldSaved', this.showBanner);\n\n        if (this.rendered) {\n            view.render();\n        }\n    },\n\n    /**\n     * Return the view for the field with the given ID.\n     *\n     * Args:\n     *     fieldID (string):\n     *        The ID of the field.\n     *\n     * Returns:\n     *     RB.ReviewRequestFields.BaseFieldView:\n     *     The view which handles editing for the field.\n     */\n    getFieldView(fieldID) {\n        return this._fieldViews[fieldID];\n    },\n\n    /**\n     * Render the editor.\n     *\n     * This will import all pre-rendered file attachment and screenshot\n     * thumbnails, turning them into FileAttachment and Screenshot objects.\n     *\n     * Returns:\n     *     RB.ReviewRequestEditorView:\n     *     This object, for chaining.\n     */\n    render() {\n        const reviewRequest = this.model.get('reviewRequest');\n        const fileAttachments = this.model.get('fileAttachments');\n        const draft = reviewRequest.draft;\n\n        this._$box = this.$('.review-request');\n        this._$warning = $('#review-request-warning');\n        this._$screenshots = $('#screenshot-thumbnails');\n        this._$attachments = $('#file-list');\n        this._$attachmentsContainer = $(this._$attachments.parent()[0]);\n        this._$bannersContainer = $('#review-request-banners');\n        this._$main = $('#review-request-main');\n        this._$extra = $('#review-request-extra');\n\n        this.listenTo(reviewRequest, 'change:visibility',\n                      this._updateArchiveVisibility);\n        this._updateArchiveVisibility();\n\n        /*\n         * We need to show any banners before we render the fields, since the\n         * banners can add their own fields.\n         */\n        this.showBanner();\n\n        if (this.model.get('editable')) {\n            RB.DnDUploader.instance.registerDropTarget(\n                this._$attachmentsContainer,\n                gettext('Drop to add a file attachment'),\n                this._uploadFile.bind(this));\n        }\n\n        this._$attachments.find('.file-container').remove();\n        fileAttachments.each(\n            fileAttachment => this.buildFileAttachmentThumbnail(\n                fileAttachment, fileAttachments, { noAnimation: true }));\n\n        this._$attachmentsContainer.find('.djblets-o-spinner').remove();\n        this._$attachmentsContainer.attr('aria-busy', 'false');\n\n        this.listenTo(fileAttachments, 'add', this.buildFileAttachmentThumbnail);\n        this.listenTo(fileAttachments, 'remove', model => {\n            const index = this._fileAttachmentThumbnailViews.findIndex(\n                view => (view.model === model));\n            this._fileAttachmentThumbnailViews[index].remove();\n            this._fileAttachmentThumbnailViews.splice(index, 1);\n        });\n        this.listenTo(fileAttachments, 'destroy', () => {\n            if (fileAttachments.length === 0) {\n                this._$attachmentsContainer.hide();\n            }\n        });\n\n        /*\n         * Import all the screenshots and file attachments rendered onto\n         * the page.\n         */\n        _.each(this._$screenshots.find('.screenshot-container'),\n               this._importScreenshotThumbnail,\n               this);\n        _.each($('.binary'),\n               this._importFileAttachmentThumbnail,\n               this);\n\n        // Render all the field views.\n        for (let fieldID in this._fieldViews) {\n            if (this._fieldViews.hasOwnProperty(fieldID)) {\n                this._fieldViews[fieldID].render();\n            }\n        }\n\n        /*\n         * Update the layout constraints any time these properties\n         * change. Also, right away.\n         */\n        $(window).resize(this._scheduleResizeLayout);\n        this.listenTo(this.model, 'change:editCount', this._checkResizeLayout);\n        this._checkResizeLayout();\n\n        this._setupActions();\n\n        this.model.on('publishError', errorText => {\n            alert(errorText);\n\n            this.$('#btn-draft-publish').enable();\n            this.$('#btn-draft-discard').enable();\n        });\n\n        this.model.on('closeError', errorText => alert(errorText));\n        this.model.on('saved', this.showBanner, this);\n        this.model.on('published', this._refreshPage, this);\n        reviewRequest.on('closed reopened', this._refreshPage, this);\n        draft.on('destroyed', this._refreshPage, this);\n\n        window.onbeforeunload = this._onBeforeUnload.bind(this);\n\n        this.rendered = true;\n\n        return this;\n    },\n\n    /**\n     * Warn the user if they try to navigate away with unsaved comments.\n     *\n     * Args:\n     *     evt (Event):\n     *         The event that triggered the handler.\n     *\n     * Returns:\n     *     string:\n     *     The warning message.\n     *\n     */\n    _onBeforeUnload(evt) {\n        if (this.model.get('editCount') > 0) {\n            /*\n             * On IE, the text must be set in evt.returnValue.\n             *\n             * On Firefox, it must be returned as a string.\n             *\n             * On Chrome, it must be returned as a string, but you\n             * can't set it on evt.returnValue (it just ignores it).\n             */\n            const msg = gettext('You have unsaved changes that will be lost if you navigate away from this page.');\n            evt = evt || window.event;\n\n            evt.returnValue = msg;\n            return msg;\n        }\n    },\n\n    /**\n     * Show a banner for the given state of the review request.\n     */\n    showBanner() {\n        if (this.banner) {\n            return;\n        }\n\n        const reviewRequest = this.model.get('reviewRequest');\n        const state = reviewRequest.get('state');\n        let BannerClass;\n\n        if (state === RB.ReviewRequest.CLOSE_SUBMITTED) {\n            BannerClass = SubmittedBannerView;\n        } else if (state === RB.ReviewRequest.CLOSE_DISCARDED) {\n            BannerClass = DiscardedBannerView;\n        } else if (state === RB.ReviewRequest.PENDING &&\n                   this.model.get('hasDraft')) {\n            BannerClass = DraftBannerView;\n        } else {\n            return;\n        }\n\n        let $existingBanner = this._$bannersContainer.children();\n\n        console.assert(BannerClass);\n        console.assert($existingBanner.length <= 1);\n\n        if ($existingBanner.length === 0) {\n            $existingBanner = undefined;\n        }\n\n        this.banner = new BannerClass({\n            el: $existingBanner,\n            reviewRequestEditorView: this,\n        });\n\n        if ($existingBanner) {\n            $existingBanner.show();\n        } else {\n            this.banner.$el.appendTo(this._$bannersContainer);\n        }\n\n        this.banner.render();\n    },\n\n    /**\n     * Handle a click on the \"Publish Draft\" button.\n     *\n     * Begins publishing the review request. If there are any field editors\n     * still open, they'll be saved first.\n     *\n     * Args:\n     *     options (object):\n     *         Options for the publish operation.\n     */\n    publishDraft(options) {\n        // Save all the fields if we need to.\n        const fields = Object.values(this._fieldViews)\n            .filter(view => view.needsSave());\n\n        this.model.set({\n            publishing: true,\n            pendingSaveCount: fields.length,\n        });\n\n        if (fields.length === 0) {\n            this.model.publishDraft(options);\n        } else {\n            fields.forEach(field => field.finishSave());\n        }\n    },\n\n    /**\n     * Upload a dropped file as a file attachment.\n     *\n     * A temporary file attachment placeholder will appear while the\n     * file attachment uploads. After the upload has finished, it will\n     * be replaced with the thumbnail depicting the file attachment.\n     *\n     * Args:\n     *     file (File):\n     *         The file to upload.\n     */\n    _uploadFile(file) {\n        // Create a temporary file listing.\n        const fileAttachment = this.model.createFileAttachment();\n\n        fileAttachment.set('file', file);\n        fileAttachment.save();\n    },\n\n    /**\n     * Set up all review request actions and listens for events.\n     */\n    _setupActions() {\n        const $closeDiscarded = this.$('#discard-review-request-action');\n        const $closeSubmitted = this.$('#submit-review-request-action');\n        const $deletePermanently = this.$('#delete-review-request-action');\n        const $updateDiff = this.$('#upload-diff-action');\n        const $uploadFile = this.$('#upload-file-action');\n\n        /*\n         * We don't want the click event filtering from these down to the\n         * parent menu, so we can't use events above.\n         */\n        $closeDiscarded.click(this._onCloseDiscardedClicked);\n        $closeSubmitted.click(this._onCloseSubmittedClicked);\n        $deletePermanently.click(this._onDeleteReviewRequestClicked);\n        $updateDiff.click(this._onUpdateDiffClicked);\n        $uploadFile.click(this._onUploadFileClicked);\n\n        RB.ReviewRequestActionHook.each(hook => {\n            _.each(hook.get('callbacks'),\n                   (handler, selector) => this.$(selector).click(handler));\n        });\n    },\n\n    /**\n     * Build a thumbnail for a FileAttachment.\n     *\n     * The thumbnail will eb added to the page. The editor will listen\n     * for events on the thumbnail to update the current edit state.\n     *\n     * This can be called either when dynamically adding a new file\n     * attachment (through drag-and-drop or Add File), or after importing\n     * from the rendered page.\n     *\n     * Args:\n     *     fileAttachment (RB.FileAttachment):\n     *         The file attachment.\n     *\n     *     collection (Backbone.Collection):\n     *         The collection of all file attachments.\n     *\n     *     options (object):\n     *         Options.\n     *\n     * Option Args:\n     *     $el (jQuery):\n     *         The thumbnail element, if it already exists in the DOM.\n     */\n    buildFileAttachmentThumbnail(fileAttachment, collection, options={}) {\n        const fileAttachmentComments = this.model.get('fileAttachmentComments');\n        const $thumbnail = options.$el;\n\n        const view = new RB.FileAttachmentThumbnail({\n            el: $thumbnail,\n            model: fileAttachment,\n            comments: fileAttachmentComments[fileAttachment.id],\n            renderThumbnail: ($thumbnail === undefined),\n            reviewRequest: this.model.get('reviewRequest'),\n            reviewRequestEditor: this.model,\n            canEdit: (this.model.get('editable') === true)\n        });\n\n        view.render();\n\n        this._fileAttachmentThumbnailViews.push(view);\n\n        if (!$thumbnail) {\n            // This is a newly added file attachment.\n            const fileAttachments = this.model.get('fileAttachments');\n            const index = fileAttachments.indexOf(fileAttachment);\n\n            this._$attachmentsContainer.show();\n\n            view.$el.insertBefore(this._$attachments.children().eq(index));\n\n            if (!options.noAnimation) {\n                view.fadeIn();\n            }\n        }\n\n        this.listenTo(view, 'hoverIn', $thumbnail => {\n            this._$attachments\n                .find('.file')\n                .not($thumbnail.find('.file')[0])\n                    .addClass('faded');\n        });\n\n        this.listenTo(\n            view, 'hoverOut',\n            () => this._$attachments.find('.file').removeClass('faded'));\n\n        view.on('beginEdit', () => this.model.incr('editCount'));\n        view.on('endEdit', () => this.model.decr('editCount'));\n        view.on('commentSaved', () => RB.DraftReviewBannerView.instance.show());\n    },\n\n    /**\n     * Import file attachments from the rendered page.\n     *\n     * Each file attachment already rendered will be turned into a\n     * FileAttachment, and a new thumbnail will be built for it.\n     *\n     * Args:\n     *     thumbnailEl (Element):\n     *         The existing DOM element to import.\n     */\n    _importFileAttachmentThumbnail(thumbnailEl) {\n        const $thumbnail = $(thumbnailEl);\n        const id = $thumbnail.data('file-id');\n        const $caption = $thumbnail.find('.file-caption .edit');\n        const reviewRequest = this.model.get('reviewRequest');\n        const fileAttachment = reviewRequest.draft.createFileAttachment({\n            id: id,\n        });\n\n        if (!$caption.hasClass('empty-caption')) {\n            fileAttachment.set('caption', $caption.text());\n        }\n\n        this.model.get('fileAttachments').add(fileAttachment, {\n            $el: $thumbnail,\n        });\n    },\n\n    /**\n     * Import screenshots from the rendered page.\n     *\n     * Each screenshot already rendered will be turned into a Screenshot.\n     *\n     * Args:\n     *     thumbnailEl (Element):\n     *         The existing DOM element to import.\n     */\n    _importScreenshotThumbnail(thumbnailEl) {\n        const $thumbnail = $(thumbnailEl);\n        const id = $thumbnail.data('screenshot-id');\n        const reviewRequest = this.model.get('reviewRequest');\n        const screenshot = reviewRequest.createScreenshot(id);\n        const view = new RB.ScreenshotThumbnail({\n            el: $thumbnail,\n            model: screenshot,\n        });\n\n        view.render();\n\n        this.model.get('screenshots').add(screenshot);\n\n        view.on('beginEdit', () => this.model.incr('editCount'));\n        view.on('endEdit', () => this.model.decr('editCount'));\n    },\n\n    /**\n     * Conditionally resize the layout.\n     *\n     * This is a wrapper for _resizeLayout that verifies that there's actually\n     * a layout to resize.\n     */\n    _checkResizeLayout() {\n        /*\n         * Not every page that uses this has a #review-request-main element\n         * (for instance, review UIs want to have the draft banners but not\n         * the review request box). In this case, just skip all of this.\n         */\n        if (this._$main.length !== 0 && !this._blockResizeLayout) {\n            this._resizeLayout();\n        }\n    },\n\n    /**\n     * Resize the layout in response to size or position changes of fields.\n     *\n     * This will spread out the main text fields to cover the full height of\n     * the review request box's main area. That helps keep a consistent look\n     * and prevents a bunch of wasted-looking space.\n     */\n    _resizeLayout() {\n        const $lastContent = this._$main.children('.review-request-section:last-child');\n        const $lastFieldContainer = $lastContent.children('.field-container');\n        const $lastField = $lastFieldContainer.children('.editable');\n        const lastFieldView = this._fieldViews[$lastField.data('field-id')];\n        const lastContentTop = Math.ceil($lastContent.position().top);\n        const editor = lastFieldView.inlineEditorView.textEditor;\n        const detailsWidth = 300; // Defined as @details-width in reviews.less\n        const detailsPadding = 10;\n        const $detailsBody = $('#review-request-details tbody');\n        const $detailsLabels = $detailsBody.find('th:first-child');\n        const $detailsValues = $detailsBody.find('span');\n\n        this._blockResizeLayout = true;\n\n        /*\n         * Make sure that the details fields wrap correctly, even if they don't\n         * have wrappable characters (this combines with the white-space:\n         * word-wrap: break-word style). This computation makes things handle\n         * potentially unknown field labels correctly.\n         */\n        $detailsValues.css('max-width', (detailsWidth -\n                                         $detailsLabels.outerWidth() -\n                                         detailsPadding * 3) + 'px');\n\n        /*\n         * Reset all the heights so we can do calculations based on their\n         * native sizes.\n         */\n        this._$main.height('auto');\n        $lastContent.height('auto');\n        $lastField.height('auto');\n\n        if (editor) {\n            editor.setSize(null, 'auto');\n        }\n\n        /*\n         * Set the review request box's main height to take up the full\n         * amount of spaces between its top and the top of the \"extra\"\n         * pane (where the issue summary table and stuff live).\n         */\n        this._$main.height(Math.ceil(this._$extra.offset().top -\n                                     this._$main.offset().top));\n        const height = this._$main.height();\n\n        if ($lastContent.outerHeight() + lastContentTop < height) {\n            $lastContent.outerHeight(height - lastContentTop);\n\n            /*\n             * Get the size of the content box, and factor in the padding at\n             * the bottom, to balance out position()'s calculation of the\n             * padding at the top. This ensures we get a height that matches\n             * the content area of the content box.\n             */\n            const contentHeight = $lastContent.height() -\n                                  Math.ceil($lastFieldContainer.position().top);\n\n            /*\n             * Set the height of the editor or the editable field placeholder,\n             * depending on whether we're in edit mode. There's no need to do\n             * both, since this logic will be called again when the state\n             * changes.\n             */\n            if (lastFieldView.inlineEditorView.editing() && editor) {\n                editor.setSize(\n                    null,\n                    contentHeight -\n                    lastFieldView.inlineEditorView.$buttons.height());\n            } else {\n                /*\n                 * It's possible to squish the editable element if we force\n                 * a size, so make sure it's always at least the natural\n                 * height.\n                 */\n                const newEditableHeight = contentHeight +\n                                          $lastField.getExtents('m', 'tb');\n\n                if (newEditableHeight > $lastField.outerHeight()) {\n                    $lastField.outerHeight(newEditableHeight);\n                }\n            }\n        }\n\n        this._blockResizeLayout = false;\n    },\n\n    /**\n     * Schedule a layout resize after the stack unwinds.\n     *\n     * This will only trigger a layout resize after the stack has unwound,\n     * and only once every 100 milliseconds at most.\n     */\n    _scheduleResizeLayout: _.throttleLayout(\n        function() { this._checkResizeLayout(); },\n        { defer: true, }),\n\n    /**\n     * Handle a click on \"Close -> Discarded\".\n     *\n     * The user will be asked for confirmation before the review request is\n     * discarded.\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onCloseDiscardedClicked() {\n        const confirmText = gettext(\n            \"Are you sure you want to discard this review request?\");\n\n        if (confirm(confirmText)) {\n            this.model.get('reviewRequest')\n                .close({\n                    type: RB.ReviewRequest.CLOSE_DISCARDED,\n                })\n                .catch(err => this.model.trigger('closeError', err.message));\n        }\n\n        return false;\n    },\n\n    /**\n     * Handle a click on \"Close -> Submitted\".\n     *\n     * If there's an unpublished draft, this will first confirm if the\n     * user is sure.\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onCloseSubmittedClicked() {\n        /*\n         * This is a non-destructive event, so don't confirm unless there's\n         * a draft.\n         */\n        let submit = true;\n\n        if (this.banner) {\n            submit = confirm(gettext(\"You have an unpublished draft. If you close this review request, the draft will be discarded. Are you sure you want to close the review request?\"));\n        }\n\n        if (submit) {\n            this.model.get('reviewRequest')\n                .close({\n                    type: RB.ReviewRequest.CLOSE_SUBMITTED,\n                })\n                .catch(err => this.model.trigger('closeError', err.message));\n        }\n\n        return false;\n    },\n\n    /**\n     * Handle a click on \"Close -> Delete Permanently\".\n     *\n     * The user will be asked for confirmation before the review request is\n     * deleted.\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onDeleteReviewRequestClicked() {\n        const $dlg = $('<p>')\n            .text(gettext('This deletion cannot be undone. All diffs and reviews will be deleted as well.'))\n            .modalBox({\n                title: gettext('Are you sure you want to delete this review request?'),\n                buttons: [\n                    $(`<input type=\"button\" value=\"${gettext('Cancel')}\"/>`),\n                    $(`<input type=\"button\" value=\"${gettext('Delete')}\"/>`)\n                        .click(() => {\n                            this.model.get('reviewRequest')\n                                .destroy({\n                                    buttons: $('input', $dlg.modalBox('buttons')),\n                                })\n                                .then(() => this._navigateTo(SITE_ROOT));\n                        }),\n                ]\n            });\n\n        return false;\n    },\n\n    /**\n     * Navigate to the given URL.\n     *\n     * This method exists so it can be overridden during unit tests.\n     */\n    _navigateTo(url) {\n        window.location = url;\n    },\n\n    /**\n     * Handle a click on \"Update -> Update Diff\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onUpdateDiffClicked() {\n        const reviewRequest = this.model.get('reviewRequest');\n        const updateDiffView = new RB.UpdateDiffView({\n            model: new RB.UploadDiffModel({\n                changeNumber: reviewRequest.get('commitID'),\n                repository: reviewRequest.get('repository'),\n                reviewRequest: reviewRequest,\n            }),\n        });\n\n        updateDiffView.render();\n\n        return false;\n    },\n\n    /**\n     * Handle a click on the \"Add File\" button.\n     *\n     * This method displays a popup for attachment upload.\n     *\n     * Args:\n     *     e (Event):\n     *         The event which triggered the action.\n     */\n    _onUploadFileClicked(e) {\n        e.stopPropagation();\n        e.preventDefault();\n\n        const uploadDialog = new RB.UploadAttachmentView({\n            reviewRequestEditor: this.model,\n        });\n        uploadDialog.show();\n    },\n\n    /**\n     * Handle a click on \"Archive -> Archive\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onArchiveClicked() {\n        return this._updateArchiveState(\n            RB.UserSession.instance.archivedReviewRequests,\n            true,\n            RB.ReviewRequest.VISIBILITY_ARCHIVED);\n    },\n\n    /**\n     * Handle a click on \"Archive -> Unarchive\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onUnarchiveClicked() {\n        return this._updateArchiveState(\n            RB.UserSession.instance.archivedReviewRequests,\n            false,\n            RB.ReviewRequest.VISIBILITY_VISIBLE);\n    },\n\n    /**\n     * Handle a click on \"Archive -> Mute\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onMuteClicked() {\n        return this._updateArchiveState(\n            RB.UserSession.instance.mutedReviewRequests,\n            true,\n            RB.ReviewRequest.VISIBILITY_MUTED);\n    },\n\n    /**\n     * Handle a click on \"Archive -> Unmute\".\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    _onUnmuteClicked() {\n        return this._updateArchiveState(\n            RB.UserSession.instance.mutedReviewRequests,\n            false,\n            RB.ReviewRequest.VISIBILITY_VISIBLE);\n    },\n\n    /**\n     * Update archive/mute state.\n     *\n     * Args:\n     *     collection (Backbone.Collection):\n     *         The collection representing the user's archived or muted review\n     *         requests.\n     *\n     *     add (boolean):\n     *         True if the review request should be added to the collection\n     *         (archived or muted), false if it shold be removed (unarchived or\n     *         unmuted).\n     *\n     *     newState (number):\n     *         The new state for the review request's ``visibility`` attribute.\n     *\n     * Returns:\n     *     boolean:\n     *     False, always.\n     */\n    async _updateArchiveState(collection, add, newState) {\n        const reviewRequest = this.model.get('reviewRequest');\n\n        if (add) {\n            await collection.addImmediately(reviewRequest);\n        } else {\n            await collection.removeImmediately(reviewRequest);\n        }\n\n        reviewRequest.set('visibility', newState);\n\n        return false;\n    },\n\n    /**\n     * Update the visibility of the archive/mute menu items.\n     */\n    _updateArchiveVisibility() {\n        const visibility = this.model.get('reviewRequest').get('visibility');\n\n        this.$('#hide-review-request-menu').html(this._archiveActionsTemplate({\n            visibility: visibility,\n            archiveText: gettext('Archive'),\n            muteText: gettext('Mute'),\n            unarchiveText: gettext('Unarchive'),\n            unmuteText: gettext('Unmute'),\n        }));\n\n        const visible = (visibility === RB.ReviewRequest.VISIBILITY_VISIBLE);\n\n        const iconClass = (visible\n                           ? 'rb-icon-archive-off'\n                           : 'rb-icon-archive-on');\n\n        const iconTitle = (visible\n                           ? gettext('Archive review request')\n                           : gettext('Unarchive review request'));\n\n        const iconId = (visible\n                        ? 'toggle-archived'\n                        : 'toggle-unarchived');\n\n        this.$('#hide-review-request-link')\n            .html(`<span class=\"rb-icon ${iconClass}\" id=\"${iconId}\" title=\"${iconTitle}\"></span>`);\n\n        if (RB.UserSession.instance.get('readOnly')) {\n            this.$('#hide-review-request-menu').hide();\n        }\n    },\n\n    /**\n     * Refresh the page.\n     */\n    _refreshPage() {\n        window.location = this.model.get('reviewRequest').get('reviewURL');\n    },\n});\n\n\n})();\n"],"mappings":"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"}