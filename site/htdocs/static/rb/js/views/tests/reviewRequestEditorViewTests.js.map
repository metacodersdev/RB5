{"version":3,"file":"reviewRequestEditorViewTests.js","names":["suite","template","screenshotThumbnailTemplate","_","reviewRequest","editor","view","$filesContainer","$screenshotsContainer","beforeEach","RB","DnDUploader","create","ReviewRequest","id","state","PENDING","ReviewRequestEditor","mutableByUser","statusMutableByUser","commentIssueManager","CommentIssueManager","$el","$","appendTo","$testsScratch","ReviewRequestEditorView","el","model","addFieldView","ReviewRequestFields","SummaryFieldView","find","fieldID","BranchFieldView","OwnerFieldView","BugsFieldView","DependsOnFieldView","TargetGroupsFieldView","TargetPeopleFieldView","DescriptionFieldView","TestingDoneFieldView","TextFieldView","MultilineTextFieldView","CheckboxFieldView","spyOn","draft","and","resolveTo","afterEach","instance","describe","render","it","done","$buttons","fn","callFake","options","buttons","forEach","$btn","add","modalBox","cmd","expect","toBe","click","toHaveBeenCalled","destroy","filter","type","CLOSE_DISCARDED","Promise","resolve","window","returnValue","close","CLOSE_SUBMITTED","MyExtension","extension","$action","Extension","extend","initialize","prototype","call","ReviewRequestActionHook","callbacks","bind","actionClicked","banner","trigger","summaryField","getFieldView","summaryEditor","inlineEditorView","on","not","is","startEdit","setValue","save","set","links","submitter","title","showBanner","callThrough","targetGroups","name","url","summary","description","publish","get","publishDraft","confirm","trivial","prop","reopen","fieldEditor","$input","field","$field","testCloseDescription","testName","richText","textEditor","setText","setRichText","triggerHandler","t","setInterval","isDirty","clearInterval","submit","saveSpyFunc","fieldName","jsonFieldName","jsonTextTypeFieldName","supportsRichText","useExtraData","fieldView","data","setupFieldTests","selector","hasAutoCompleteTest","undefined","hasEditorTest","runSavingTest","textType","supportsRichTextEV","hasClass","val","getValue","expectedData","fieldPrefix","force_text_type","include_text_types","calls","argsFor","toEqual","savingTest","richTextSavingTest","inlineEditorResizeTests","toHaveBeenCalledWith","editCountTests","cancel","securityTests","fieldOwner","rbTestFoundXSS","fieldOnReviewRequest","text","$links","children","length","$link","eq","attr","html","$fieldChildren","closeDescriptionTests","closeType","bannerSel","testSave","status","jsonCloseType","enabled","username","href","FileAttachmentThumbnail","createFileAttachment","fileAttachment","$thumbnail","$caption","defer","screenshots","append","ScreenshotThumbnail","at","screenshot","inlineEditor","incr","_onBeforeUnload","Event","toBeDefined","toBeUndefined"],"sources":["../../../../../../static/rb/js/views/tests/reviewRequestEditorViewTests.es6.js"],"sourcesContent":["suite('rb/views/ReviewRequestEditorView', function() {\n    const template = dedent`\n        <div>\n         <div id=\"review-request-banners\"></div>\n         <div id=\"review-request-warning\"></div>\n         <div class=\"actions\">\n          <a href=\"#\" id=\"discard-review-request-action\"></a>\n          <a href=\"#\" id=\"submit-review-request-action\"></a>\n          <a href=\"#\" id=\"delete-review-request-action\"></a>\n         </div>\n         <div class=\"review-request\">\n          <div id=\"review-request-main\">\n           <span id=\"field_summary\"\n                 data-field-id=\"summary\"\n                 class=\"field editable\"></span>\n           <span id=\"field_branch\"\n                 data-field-id=\"branch\"\n                 class=\"field editable\"></span>\n           <span id=\"field_submitter\"\n                 data-field-id=\"submitter\"\n                 class=\"field editable\"></span>\n           <span id=\"field_bugs_closed\"\n                 data-field-id=\"bugs_closed\"\n                 class=\"field editable comma-editable\"></span>\n           <span id=\"field_depends_on\"\n                 data-field-id=\"depends_on\"\n                 class=\"field editable comma-editable\"></span>\n           <span id=\"field_target_groups\"\n                 data-field-id=\"target_groups\"\n                 class=\"field editable comma-editable\"></span>\n           <span id=\"field_target_people\"\n                 data-field-id=\"target_people\"\n                 class=\"field editable\"></span>\n           <div class=\"review-request-section\">\n            <pre id=\"field_description\"\n                 data-field-id=\"description\"\n                 class=\"field field-text-area editable\"></pre>\n           </div>\n           <div class=\"review-request-section\">\n            <pre id=\"field_testing_done\"\n                 data-field-id=\"testing_done\"\n                 class=\"field field-text-area editable\"></pre>\n           </div>\n           <div class=\"review-request-section\">\n            <div class=\"field-container\">\n             <pre id=\"field_my_custom\"\n                  data-field-id=\"my_custom\"\n                  class=\"field editable\"></pre>\n             <pre id=\"field_my_rich_text_custom\"\n                  data-field-id=\"my_rich_text_custom\"\n                  class=\"field field-text-area editable rich-text\"\n                  data-allow-markdown=\"True\"></pre>\n             <pre id=\"field_text\"\n                  data-field-id=\"text\"\n                  class=\"field field-text-area editable\"\n                  data-allow-markdown=\"True\"></pre>\n             <input id=\"field_checkbox\"\n                    data-field-id=\"checkbox\"\n                    class=\"field\"\n                    type=\"checkbox\">\n            </div>\n           </div>\n          </div>\n         </div>\n         <div id=\"review-request-extra\">\n          <div>\n           <div id=\"file-list\"><br /></div>\n          </div>\n          <div>\n           <div id=\"screenshot-thumbnails\"><br /></div>\n          </div>\n         </div>\n        </div>\n    `;\n    const screenshotThumbnailTemplate = _.template(dedent`\n        <div class=\"screenshot-container\" data-screenshot-id=\"<%= id %>\">\n         <div class=\"screenshot-caption\">\n          <a class=\"edit\"></a>\n         </div>\n         <a class=\"delete\">X</a>\n        '</div>\n    `);\n    let reviewRequest;\n    let editor;\n    let view;\n    let $filesContainer;\n    let $screenshotsContainer;\n\n    beforeEach(function() {\n        RB.DnDUploader.create();\n\n        reviewRequest = new RB.ReviewRequest({\n            id: 123,\n            'public': true,\n            state: RB.ReviewRequest.PENDING,\n        });\n\n        editor = new RB.ReviewRequestEditor({\n            mutableByUser: true,\n            statusMutableByUser: true,\n            reviewRequest: reviewRequest,\n            commentIssueManager: new RB.CommentIssueManager(),\n        });\n\n        const $el = $(template).appendTo($testsScratch);\n\n        view = new RB.ReviewRequestEditorView({\n            el: $el,\n            model: editor,\n        });\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.SummaryFieldView({\n                el: $el.find('#field_summary'),\n                fieldID: 'summary',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.BranchFieldView({\n                el: $el.find('#field_branch'),\n                fieldID: 'branch',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.OwnerFieldView({\n                el: $el.find('#field_submitter'),\n                fieldID: 'submitter',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.BugsFieldView({\n                el: $el.find('#field_bugs_closed'),\n                fieldID: 'bugs_closed',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.DependsOnFieldView({\n                el: $el.find('#field_depends_on'),\n                fieldID: 'depends_on',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.TargetGroupsFieldView({\n                el: $el.find('#field_target_groups'),\n                fieldID: 'target_groups',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.TargetPeopleFieldView({\n                el: $el.find('#field_target_people'),\n                fieldID: 'target_people',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.DescriptionFieldView({\n                el: $el.find('#field_description'),\n                fieldID: 'description',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.TestingDoneFieldView({\n                el: $el.find('#field_testing_done'),\n                fieldID: 'testing_done',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.TextFieldView({\n                el: $el.find('#field_my_custom'),\n                fieldID: 'my_custom',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.MultilineTextFieldView({\n                el: $el.find('#field_my_rich_text_custom'),\n                fieldID: 'my_rich_text_custom',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.MultilineTextFieldView({\n                el: $el.find('#field_text'),\n                fieldID: 'text',\n                model: editor,\n            }));\n\n        view.addFieldView(\n            new RB.ReviewRequestFields.CheckboxFieldView({\n                el: $el.find('#field_checkbox'),\n                fieldID: 'checkbox',\n                model: editor,\n            }));\n\n        $filesContainer = $testsScratch.find('#file-list');\n        $screenshotsContainer = $testsScratch.find('#screenshot-thumbnails');\n\n        /*\n         * XXX Prevent _refreshPage from being called. Eventually, that\n         *     function will go away.\n         */\n        spyOn(view, '_refreshPage');\n\n        spyOn(reviewRequest.draft, 'ready').and.resolveTo();\n    });\n\n    afterEach(function() {\n        RB.DnDUploader.instance = null;\n    });\n\n    describe('Actions bar', function() {\n        describe('Close', function() {\n            beforeEach(function() {\n                view.render();\n            });\n\n            it('Delete Permanently', function(done) {\n                let $buttons = $();\n\n                spyOn(reviewRequest, 'destroy').and.resolveTo();\n                spyOn($.fn, 'modalBox').and.callFake(options => {\n                    options.buttons.forEach($btn => {\n                        $buttons = $buttons.add($btn);\n                    });\n\n                    /* Simulate the modalBox API for what we need. */\n                    return {\n                        modalBox: cmd => {\n                            expect(cmd).toBe('buttons');\n                            return $buttons;\n                        }\n                    };\n                });\n\n                $('#delete-review-request-action').click();\n                expect($.fn.modalBox).toHaveBeenCalled();\n\n                /* This gets called at the end of the operation. */\n                spyOn(view, '_navigateTo').and.callFake(() => {\n                    expect(reviewRequest.destroy).toHaveBeenCalled();\n                    done();\n                });\n\n                $buttons.filter('input[value=\"Delete\"]').click();\n            });\n\n            it('Discarded', function() {\n                spyOn(reviewRequest, 'close').and.callFake(options => {\n                    expect(options.type).toBe(RB.ReviewRequest.CLOSE_DISCARDED);\n                    return Promise.resolve();\n                });\n\n                spyOn(window, 'confirm').and.returnValue(true);\n\n                $('#discard-review-request-action').click();\n\n                expect(reviewRequest.close).toHaveBeenCalled();\n            });\n\n            it('Submitted', function() {\n                spyOn(reviewRequest, 'close').and.callFake(options => {\n                    expect(options.type).toBe(RB.ReviewRequest.CLOSE_SUBMITTED);\n                    return Promise.resolve();\n                });\n\n                $('#submit-review-request-action').click();\n\n                expect(reviewRequest.close).toHaveBeenCalled();\n            });\n        });\n\n        it('ReviewRequestActionHooks', function() {\n            var MyExtension,\n                extension,\n                $action;\n\n            MyExtension = RB.Extension.extend({\n                initialize: function() {\n                    RB.Extension.prototype.initialize.call(this);\n\n                    new RB.ReviewRequestActionHook({\n                        extension: this,\n                        callbacks: {\n                            '#my-action': _.bind(function() {\n                                this.actionClicked = true;\n                            }, this)\n                        }\n                    });\n                }\n            });\n\n            extension = new MyExtension();\n\n            /*\n             * Actions are rendered server-side, not client-side, so we won't\n             * get the action added through the hook above.\n             */\n            $action = $('<a href=\"#\" id=\"my-action\" />')\n                .appendTo(view.$('.actions'));\n\n            view.render();\n\n            $action.click();\n            expect(extension.actionClicked).toBe(true);\n        });\n    });\n\n    describe('Banners', function() {\n        beforeEach(function() {\n            view.render();\n        });\n\n        describe('Draft banner', function() {\n            describe('Visibility', function() {\n                it('Hidden when saving', function() {\n                    expect(view.banner).toBe(null);\n                    editor.trigger('saving');\n                    expect(view.banner).toBe(null);\n                });\n\n                it('Show when saved', function(done) {\n                    const summaryField = view.getFieldView('summary');\n                    const summaryEditor = summaryField.inlineEditorView;\n\n                    expect(view.banner).toBe(null);\n\n                    spyOn(reviewRequest.draft, 'ensureCreated').and.resolveTo();\n                    spyOn(reviewRequest.draft, 'save').and.resolveTo();\n\n                    summaryField.on('fieldSaved', () => {\n                        expect(view.banner).not.toBe(null);\n                        expect(view.banner.$el.is(':visible')).toBe(true);\n\n                        done();\n                    });\n\n                    summaryEditor.startEdit();\n                    summaryEditor.setValue('New summary');\n                    summaryEditor.save();\n                });\n            });\n\n            describe('Buttons actions', function() {\n                beforeEach(function() {\n                    reviewRequest.set({\n                        links: {\n                            submitter: {\n                                title: 'submitter',\n                            },\n                        },\n                    });\n                });\n                it('Discard Draft', function() {\n                    view.model.set('hasDraft', true);\n                    view.showBanner();\n\n                    spyOn(reviewRequest.draft, 'destroy').and.resolveTo();\n\n                    $('#btn-draft-discard').click();\n\n                    expect(reviewRequest.draft.destroy).toHaveBeenCalled();\n                });\n\n                it('Discard Review Request', function() {\n                    reviewRequest.set('public', false);\n                    view.model.set('hasDraft', true);\n                    view.showBanner();\n\n                    spyOn(reviewRequest, 'close').and.callFake(options => {\n                        expect(options.type)\n                            .toBe(RB.ReviewRequest.CLOSE_DISCARDED);\n                        return Promise.resolve();\n                    });\n\n                    $('#btn-review-request-discard').click();\n\n                    expect(reviewRequest.close).toHaveBeenCalled();\n                });\n\n                describe('Publish', function() {\n                    beforeEach(function() {\n                        view.model.set('hasDraft', true);\n\n                        spyOn(editor, 'publishDraft').and.callThrough();\n                        spyOn(reviewRequest.draft, 'ensureCreated').and.resolveTo();\n                        spyOn(reviewRequest.draft, 'publish').and.resolveTo();\n\n                        /* Set up some basic state so that we pass validation. */\n                        reviewRequest.draft.set({\n                            targetGroups: [{\n                                name: 'foo',\n                                url: '/groups/foo',\n                            }],\n                            summary: 'foo',\n                            links: {\n                                submitter: {\n                                    title: 'submitter',\n                                },\n                            },\n                            description: 'foo',\n                        });\n                    });\n\n                    it('Basic publishing', function(done) {\n                        view.showBanner();\n\n                        reviewRequest.draft.publish.and.callFake(() => {\n                            expect(editor.get('publishing')).toBe(true);\n                            expect(editor.get('pendingSaveCount')).toBe(0);\n                            expect(editor.publishDraft).toHaveBeenCalled();\n\n                            done();\n                        });\n\n                        $('#btn-draft-publish').click();\n                    });\n\n                    it('With submitter changed', function(done) {\n                        reviewRequest.draft.set({\n                            links: {\n                                submitter: {\n                                    title: 'submitter2',\n                                },\n                            },\n                        });\n                        view.showBanner();\n\n                        spyOn(window, 'confirm').and.returnValue(true);\n\n                        reviewRequest.draft.publish.and.callFake(() => {\n                            expect(editor.get('publishing')).toBe(true);\n                            expect(editor.get('pendingSaveCount')).toBe(0);\n                            expect(editor.publishDraft).toHaveBeenCalled();\n                            expect(window.confirm).toHaveBeenCalled();\n\n                            done();\n                        });\n\n                        $('#btn-draft-publish').click();\n                    });\n\n                    it('With Send E-Mail turned on', function(done) {\n                        view.model.set('showSendEmail', true);\n                        view.showBanner();\n\n                        reviewRequest.draft.publish.and.callFake(options => {\n                            expect(editor.get('publishing')).toBe(true);\n                            expect(editor.get('pendingSaveCount')).toBe(0);\n                            expect(editor.publishDraft).toHaveBeenCalled();\n                            expect(options.trivial).toBe(0);\n\n                            done();\n                        });\n\n                        $('#btn-draft-publish').click();\n\n                    });\n\n                    it('With Send E-Mail turned off', function(done) {\n                        view.model.set('showSendEmail', true);\n                        view.showBanner();\n\n                        $('.send-email').prop('checked', false);\n\n                        reviewRequest.draft.publish.and.callFake(options => {\n                            expect(editor.get('publishing')).toBe(true);\n                            expect(editor.get('pendingSaveCount')).toBe(0);\n                            expect(editor.publishDraft).toHaveBeenCalled();\n                            expect(options.trivial).toBe(1);\n\n                            done();\n                        });\n\n                        $('#btn-draft-publish').click();\n                    });\n                });\n            });\n\n            describe('Button states', function() {\n                let $buttons;\n\n                beforeEach(function() {\n                    view.model.set('hasDraft', true);\n                    view.showBanner();\n\n                    $buttons = view.banner.$buttons;\n                });\n\n                it('Enabled by default', function() {\n                    expect($buttons.prop('disabled')).toBe(false);\n                });\n\n                it('Disabled when saving', function() {\n                    expect($buttons.prop('disabled')).toBe(false);\n                    editor.trigger('saving');\n                    expect($buttons.prop('disabled')).toBe(true);\n                });\n\n                it('Enabled when saved', function() {\n                    expect($buttons.prop('disabled')).toBe(false);\n                    editor.trigger('saving');\n                    expect($buttons.prop('disabled')).toBe(true);\n                    editor.trigger('saved');\n                    expect($buttons.prop('disabled')).toBe(false);\n                });\n            });\n        });\n\n        describe('Discarded banner', function() {\n            beforeEach(function() {\n                reviewRequest.set('state', RB.ReviewRequest.CLOSE_DISCARDED);\n            });\n\n            it('Visibility', function() {\n                expect(view.banner).toBe(null);\n\n                view.showBanner();\n\n                expect(view.banner).not.toBe(null);\n                expect(view.banner.el.id).toBe('discard-banner');\n                expect(view.banner.$el.is(':visible')).toBe(true);\n            });\n\n            describe('Buttons actions', function() {\n                beforeEach(function() {\n                    expect(view.banner).toBe(null);\n                    view.showBanner();\n                });\n\n                it('Reopen', function() {\n                    spyOn(reviewRequest, 'reopen').and.resolveTo();\n\n                    $('#btn-review-request-reopen').click();\n\n                    expect(reviewRequest.reopen).toHaveBeenCalled();\n                });\n            });\n\n            describe('Close description', function() {\n                let fieldEditor;\n                let $input;\n\n                beforeEach(function() {\n                    view.showBanner();\n                    fieldEditor = view.banner.field.inlineEditorView;\n                    $input = fieldEditor.$field;\n                });\n\n                function testCloseDescription(testName, richText) {\n                    it(testName, function(done) {\n                        fieldEditor.startEdit();\n                        const textEditor = fieldEditor.textEditor;\n                        textEditor.setText('My description');\n                        textEditor.setRichText(richText);\n\n                        $input.triggerHandler('keyup');\n\n                        const t = setInterval(() => {\n                            if (fieldEditor.isDirty()) {\n                                clearInterval(t);\n\n                                spyOn(reviewRequest, 'close')\n                                    .and.callFake(options => {\n                                        expect(options.type)\n                                            .toBe(RB.ReviewRequest.CLOSE_DISCARDED);\n                                        expect(options.description)\n                                            .toBe('My description');\n                                        expect(options.richText).toBe(richText);\n                                        return Promise.resolve();\n                                    });\n\n                                fieldEditor.submit();\n                                expect(reviewRequest.close).toHaveBeenCalled();\n\n                                done();\n                            }\n                        }, 100);\n                    });\n                }\n\n                describe('Saves', function() {\n                    testCloseDescription('For Markdown', true);\n                    testCloseDescription('For plain text', false);\n                });\n            });\n        });\n\n        describe('Submitted banner', function() {\n            beforeEach(function() {\n                reviewRequest.set('state', RB.ReviewRequest.CLOSE_SUBMITTED);\n            });\n\n            it('Visibility', function() {\n                expect(view.banner).toBe(null);\n\n                view.showBanner();\n\n                expect(view.banner).not.toBe(null);\n                expect(view.banner.el.id).toBe('submitted-banner');\n                expect(view.banner.$el.is(':visible')).toBe(true);\n            });\n\n            describe('Buttons actions', function() {\n                beforeEach(function() {\n                    expect(view.banner).toBe(null);\n                    reviewRequest.set('state', RB.ReviewRequest.CLOSE_SUBMITTED);\n                    view.showBanner();\n                });\n\n                it('Reopen', function() {\n                    spyOn(reviewRequest, 'reopen').and.resolveTo();\n\n                    $('#btn-review-request-reopen').click();\n\n                    expect(reviewRequest.reopen).toHaveBeenCalled();\n                });\n            });\n\n            describe('Close description', function() {\n                let fieldEditor;\n                let $input;\n\n                beforeEach(function() {\n                    view.showBanner();\n                    fieldEditor = view.banner.field.inlineEditorView;\n                    $input = fieldEditor.$field;\n                });\n\n                function testCloseDescription(testName, richText) {\n                    it(testName, function(done) {\n                        fieldEditor.startEdit();\n                        const textEditor = fieldEditor.textEditor;\n                        textEditor.setText('My description');\n                        textEditor.setRichText(richText);\n\n                        $input.triggerHandler('keyup');\n\n                        const t = setInterval(function() {\n                            if (fieldEditor.isDirty()) {\n                                clearInterval(t);\n\n                                spyOn(reviewRequest, 'close')\n                                    .and.callFake(options => {\n                                        expect(options.type)\n                                            .toBe(RB.ReviewRequest.CLOSE_SUBMITTED);\n                                        expect(options.description)\n                                            .toBe('My description');\n                                        expect(options.richText).toBe(richText);\n                                        return Promise.resolve();\n                                    });\n\n                                fieldEditor.submit();\n                                expect(reviewRequest.close).toHaveBeenCalled();\n\n                                done();\n                            }\n                        }, 100);\n                    });\n                }\n\n                describe('Saves', function() {\n                    testCloseDescription('For Markdown', true);\n                    testCloseDescription('For plain text', false);\n                });\n            });\n        });\n    });\n\n    describe('Fields', function() {\n        let saveSpyFunc;\n        let fieldName;\n        let jsonFieldName;\n        let jsonTextTypeFieldName;\n        let supportsRichText;\n        let useExtraData;\n        let fieldView;\n        let fieldEditor;\n        let $field;\n        let $input;\n\n        beforeEach(function() {\n            if (!saveSpyFunc) {\n                saveSpyFunc = options => {\n                    expect(options.data[jsonFieldName]).toBe('My Value');\n                    return Promise.resolve();\n                };\n            }\n\n            spyOn(reviewRequest.draft, 'save').and.callFake(saveSpyFunc);\n\n            view.render();\n        });\n\n        function setupFieldTests(options) {\n            beforeEach(function() {\n                fieldName = options.fieldName;\n                jsonFieldName = options.jsonFieldName;\n                jsonTextTypeFieldName = (jsonFieldName === 'text'\n                                         ? 'text_type'\n                                         : jsonFieldName + '_text_type');\n                supportsRichText = !!options.supportsRichText;\n                useExtraData = options.useExtraData;\n                fieldView = view.getFieldView(options.fieldID || options.jsonFieldName);\n                fieldEditor = fieldView.inlineEditorView;\n                $field = view.$(options.selector);\n                $input = fieldEditor.$field;\n            });\n        }\n\n        function hasAutoCompleteTest() {\n            it('Has auto-complete', function() {\n                expect($input.data('uiRbautocomplete')).not.toBe(undefined);\n            });\n        }\n\n        function hasEditorTest() {\n            it('Has editor', function() {\n                expect(fieldEditor).not.toBe(undefined);\n            });\n        }\n\n        function runSavingTest(richText, textType, supportsRichTextEV) {\n            beforeEach(function(done) {\n                expect(supportsRichText).toBe(supportsRichTextEV);\n\n                fieldEditor.startEdit();\n\n                if (supportsRichText) {\n                    expect($field.hasClass('field-text-area')).toBe(true);\n\n                    const textEditor = fieldEditor.textEditor;\n                    textEditor.setText('My Value');\n                    textEditor.setRichText(richText);\n                } else {\n                    $input.val('My Value');\n                }\n\n                $input.triggerHandler('keyup');\n                expect(fieldEditor.getValue()).toBe('My Value');\n\n                const t = setInterval(() => {\n                    if (fieldEditor.isDirty()) {\n                        clearInterval(t);\n                        done();\n                    }\n                }, 100);\n            });\n\n            it('', function() {\n                const expectedData = {};\n                const fieldPrefix = (useExtraData ? 'extra_data.' : '');\n\n                expectedData[fieldPrefix + jsonFieldName] = 'My Value';\n\n                if (supportsRichText) {\n                    expectedData[fieldPrefix + jsonTextTypeFieldName] =\n                        textType;\n\n                    expectedData.force_text_type = 'html';\n                    expectedData.include_text_types = 'raw';\n                }\n\n                expect(fieldEditor.isDirty()).toBe(true);\n                fieldEditor.submit();\n\n                expect(reviewRequest.draft.save).toHaveBeenCalled();\n                expect(reviewRequest.draft.save.calls.argsFor(0)[0].data)\n                    .toEqual(expectedData);\n            });\n        }\n\n        function savingTest() {\n            describe('Saves', function() {\n                runSavingTest(undefined, undefined, false);\n            });\n        }\n\n        function richTextSavingTest() {\n            describe('Saves', function() {\n                describe('For Markdown', function() {\n                    runSavingTest(true, 'markdown', true);\n                });\n\n                describe('For plain text', function() {\n                    runSavingTest(false, 'plain', true);\n                });\n            });\n        }\n\n        function inlineEditorResizeTests() {\n            it('Propagates resizes', function() {\n                spyOn(fieldView, 'trigger').and.callThrough();\n\n                fieldView.inlineEditorView.textEditor.$el.triggerHandler(\n                    'resize');\n\n                expect(fieldView.trigger).toHaveBeenCalledWith('resize');\n            });\n        }\n\n        function editCountTests() {\n            describe('Edit counts', function() {\n                it('When opened', function() {\n                    expect(editor.get('editCount')).toBe(0);\n                    fieldEditor.startEdit();\n                    expect(editor.get('editCount')).toBe(1);\n                });\n\n                it('When canceled', function() {\n                    fieldEditor.startEdit();\n                    fieldEditor.cancel();\n                    expect(editor.get('editCount')).toBe(0);\n                });\n\n                it('When submitted', function() {\n                    fieldEditor.startEdit();\n                    $input\n                        .val('My Value')\n                        .triggerHandler('keyup');\n                    fieldEditor.submit();\n\n                    expect(editor.get('editCount')).toBe(0);\n                });\n            });\n        }\n\n        function securityTests(options={}) {\n            if (options.supportsRichText) {\n                describe('Security measures', function() {\n                    it('No self-XSS when draft field changes', function() {\n                        let fieldOwner;\n\n                        delete window.rbTestFoundXSS;\n\n                        if (options.fieldOnReviewRequest) {\n                            fieldOwner = reviewRequest;\n                        } else {\n                            fieldOwner = reviewRequest.draft;\n                        }\n\n                        fieldOwner.set(\n                            fieldName,\n                            '\"><script>window.rbTestFoundXSS = true;</script>');\n                        fieldOwner.trigger('change:' + fieldName);\n                        fieldOwner.trigger('fieldChange:' + fieldName);\n\n                        expect(window.rbTestFoundXSS).toBe(undefined);\n                    });\n                });\n            }\n        }\n\n        describe('Branch', function() {\n            setupFieldTests({\n                fieldName: 'branch',\n                jsonFieldName: 'branch',\n                selector: '#field_branch',\n            });\n\n            hasEditorTest();\n            savingTest();\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Bugs Closed', function() {\n            setupFieldTests({\n                fieldName: 'bugsClosed',\n                jsonFieldName: 'bugs_closed',\n                selector: '#field_bugs_closed',\n            });\n\n            hasEditorTest();\n            savingTest();\n\n            describe('Formatting', function() {\n                it('With bugTrackerURL', function() {\n                    reviewRequest.set('bugTrackerURL',\n                                      'http://issues/?id=--bug_id--');\n                    reviewRequest.draft.set('bugsClosed', [1, 2, 3]);\n                    editor.trigger('fieldChanged:bugsClosed');\n\n                    expect($field.text()).toBe('1, 2, 3');\n\n                    const $links = $field.children('a');\n                    expect($links.length).toBe(3);\n\n                    let $link = $links.eq(0);\n                    expect($link.hasClass('bug')).toBe(true);\n                    expect($link.text()).toBe('1');\n                    expect($link.attr('href')).toBe('http://issues/?id=1');\n\n                    $link = $links.eq(1);\n                    expect($link.hasClass('bug')).toBe(true);\n                    expect($link.text()).toBe('2');\n                    expect($link.attr('href')).toBe('http://issues/?id=2');\n\n                    $link = $links.eq(2);\n                    expect($link.hasClass('bug')).toBe(true);\n                    expect($link.text()).toBe('3');\n                    expect($link.attr('href')).toBe('http://issues/?id=3');\n                });\n\n                it('Without bugTrackerURL', function() {\n                    reviewRequest.set('bugTrackerURL', '');\n                    reviewRequest.draft.set('bugsClosed', [1, 2, 3]);\n                    editor.trigger('fieldChanged:bugsClosed');\n\n                    expect($field.html()).toBe('1, 2, 3');\n                });\n            });\n\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Depends On', function() {\n            setupFieldTests({\n                fieldName: 'dependsOn',\n                jsonFieldName: 'depends_on',\n                selector: '#field_depends_on',\n            });\n\n            hasAutoCompleteTest();\n            hasEditorTest();\n            savingTest();\n\n            it('Formatting', function() {\n                reviewRequest.draft.set('dependsOn', [\n                    {\n                        id: '123',\n                        url: '/r/123/',\n                    },\n                    {\n                        id: '124',\n                        url: '/r/124/',\n                    },\n                ]);\n                editor.trigger('fieldChanged:dependsOn');\n\n                const $fieldChildren = $field.children();\n                expect($field.text()).toBe('123, 124');\n                expect($fieldChildren.eq(0).attr('href')).toBe('/r/123/');\n                expect($fieldChildren.eq(1).attr('href')).toBe('/r/124/');\n            });\n\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Change Descriptions', function() {\n            function closeDescriptionTests(options) {\n                beforeEach(function() {\n                    reviewRequest.set('state', options.closeType);\n                    view.showBanner();\n\n                    spyOn(reviewRequest, 'close').and.callThrough();\n                    spyOn(reviewRequest, 'save').and.resolveTo();\n                });\n\n                setupFieldTests({\n                    fieldName: 'closeDescription',\n                    jsonFieldName: 'close_description',\n                    selector: options.bannerSel + ' #field_close_description',\n                });\n\n                hasEditorTest();\n\n                it('Starts closed', function() {\n                    expect($input.is(':visible')).toBe(false);\n                });\n\n                describe('Saves', function() {\n                    function testSave(richText, textType, setRichText) {\n                        const expectedData = {\n                            status: options.jsonCloseType,\n                            force_text_type: 'html',\n                            include_text_types: 'raw',\n                        };\n\n                        expectedData[options.jsonTextTypeFieldName] = textType;\n                        expectedData[options.jsonFieldName] = 'My Value';\n\n                        fieldEditor.startEdit();\n\n                        const textEditor = fieldEditor.textEditor;\n                        textEditor.setText('My Value');\n\n                        if (setRichText !== false) {\n                            textEditor.setRichText(richText);\n                        }\n\n                        $input.triggerHandler('keyup');\n                        fieldEditor.submit();\n\n                        expect(reviewRequest.close).toHaveBeenCalled();\n                        expect(reviewRequest.save).toHaveBeenCalled();\n                        expect(reviewRequest.save.calls.argsFor(0)[0].data)\n                            .toEqual(expectedData);\n                    }\n\n                    it('For Markdown', function() {\n                        testSave(true, 'markdown');\n                    });\n\n                    it('For plain text', function() {\n                        testSave(false, 'plain');\n                    });\n                });\n\n                describe('State when statusEditable', function() {\n                    it('Disabled when false', function() {\n                        editor.set('statusEditable', false);\n                        expect(fieldEditor.options.enabled).toBe(false);\n                    });\n\n                    it('Enabled when true', function() {\n                        editor.set('statusEditable', true);\n                        expect(fieldEditor.options.enabled).toBe(true);\n                    });\n                });\n\n                describe('Formatting', function() {\n                    it('Links', function() {\n                        reviewRequest.set('closeDescription',\n                                          'Testing /r/123');\n                        editor.trigger('fieldChanged:closeDescription');\n\n                        expect($field.text()).toBe('Testing /r/123');\n                        expect($field.find('a').attr('href')).toBe('/r/123/');\n                    });\n                });\n\n                inlineEditorResizeTests();\n                editCountTests();\n                securityTests({\n                    fieldOnReviewRequest: true,\n                    supportsRichText: true,\n                });\n            }\n\n            describe('Discarded review requests', function() {\n                closeDescriptionTests({\n                    bannerSel: '#discard-banner',\n                    closeType: RB.ReviewRequest.CLOSE_DISCARDED,\n                    jsonCloseType: 'discarded',\n                    jsonFieldName: 'close_description',\n                    jsonTextTypeFieldName: 'close_description_text_type',\n                });\n            });\n\n            describe('Draft review requests', function() {\n                beforeEach(function() {\n                    view.model.set('hasDraft', true);\n                    view.showBanner();\n                });\n\n                setupFieldTests({\n                    supportsRichText: true,\n                    fieldID: 'change_description',\n                    fieldName: 'changeDescription',\n                    jsonFieldName: 'changedescription',\n                    selector: '#draft-banner #field_change_description',\n                });\n\n                hasEditorTest();\n                richTextSavingTest();\n\n                editCountTests();\n                securityTests({\n                    fieldOnReviewRequest: true,\n                    supportsRichText: true,\n                });\n            });\n\n            describe('Submitted review requests', function() {\n                closeDescriptionTests({\n                    bannerSel: '#submitted-banner',\n                    closeType: RB.ReviewRequest.CLOSE_SUBMITTED,\n                    jsonCloseType: 'submitted',\n                    jsonFieldName: 'close_description',\n                    jsonTextTypeFieldName: 'close_description_text_type',\n                });\n            });\n        });\n\n        describe('Description', function() {\n            setupFieldTests({\n                supportsRichText: true,\n                fieldName: 'description',\n                jsonFieldName: 'description',\n                selector: '#field_description',\n            });\n\n            hasEditorTest();\n            richTextSavingTest();\n\n            describe('Formatting', function() {\n                it('Links', function() {\n                    reviewRequest.draft.set('description', 'Testing /r/123');\n                    editor.trigger('fieldChanged:description');\n\n                    expect($field.text()).toBe('Testing /r/123');\n                    expect($field.find('a').attr('href')).toBe('/r/123/');\n                });\n            });\n\n            inlineEditorResizeTests();\n            editCountTests();\n            securityTests({\n                supportsRichText: true,\n            });\n        });\n\n        describe('Summary', function() {\n            setupFieldTests({\n                fieldName: 'summary',\n                jsonFieldName: 'summary',\n                selector: '#field_summary',\n            });\n\n            hasEditorTest();\n            savingTest();\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Testing Done', function() {\n            setupFieldTests({\n                supportsRichText: true,\n                fieldName: 'testingDone',\n                jsonFieldName: 'testing_done',\n                selector: '#field_testing_done',\n            });\n\n            hasEditorTest();\n            richTextSavingTest();\n\n            describe('Formatting', function() {\n                it('Links', function() {\n                    reviewRequest.draft.set('testingDone', 'Testing /r/123');\n                    editor.trigger('fieldChanged:testingDone');\n\n                    expect($field.text()).toBe('Testing /r/123');\n                    expect($field.find('a').attr('href')).toBe('/r/123/');\n                });\n            });\n\n            inlineEditorResizeTests();\n            editCountTests();\n            securityTests({\n                supportsRichText: true,\n            });\n        });\n\n        describe('Reviewers', function() {\n            describe('Groups', function() {\n                setupFieldTests({\n                    fieldName: 'targetGroups',\n                    jsonFieldName: 'target_groups',\n                    selector: '#field_target_groups',\n                });\n\n                hasAutoCompleteTest();\n                hasEditorTest();\n                savingTest();\n\n                it('Formatting', function() {\n                    reviewRequest.draft.set('targetGroups', [\n                        {\n                            name: 'group1',\n                            url: '/groups/group1/',\n                        },\n                        {\n                            name: 'group2',\n                            url: '/groups/group2/',\n                        }\n                    ]);\n                    editor.trigger('fieldChanged:targetGroups');\n\n                    expect($field.html()).toBe(\n                        '<a href=\"/groups/group1/\">group1</a>, ' +\n                        '<a href=\"/groups/group2/\">group2</a>');\n                });\n\n                editCountTests();\n                securityTests();\n            });\n\n            describe('People', function() {\n                setupFieldTests({\n                    fieldName: 'targetPeople',\n                    jsonFieldName: 'target_people',\n                    selector: '#field_target_people',\n                });\n\n                hasAutoCompleteTest();\n                hasEditorTest();\n                savingTest();\n\n                it('Formatting', function() {\n                    reviewRequest.draft.set('targetPeople', [\n                        {\n                            username: 'user1',\n                            url: '/users/user1/',\n                        },\n                        {\n                            username: 'user2',\n                            url: '/users/user2/',\n                        },\n                    ]);\n                    editor.trigger('fieldChanged:targetPeople');\n\n                    expect($field.text()).toBe('user1, user2');\n                    expect($($field.children()[0]).attr('href')).toBe('/users/user1/');\n                    expect($($field.children()[1]).attr('href')).toBe('/users/user2/');\n                });\n\n                editCountTests();\n                securityTests();\n            });\n        });\n\n        describe('Owner', function() {\n            setupFieldTests({\n                jsonFieldName: 'submitter',\n                selector: '#field_submitter',\n            });\n\n            hasAutoCompleteTest();\n            hasEditorTest();\n            savingTest();\n\n            it('Formatting', function() {\n                reviewRequest.draft.set('submitter',\n                    {\n                        title: 'user1',\n                        href: '/users/user1/',\n                    }\n                );\n                editor.trigger('fieldChanged:submitter');\n\n                expect($field.text()).toBe('user1');\n                expect(($field.children()).attr('href')).toBe('/users/user1/');\n            });\n\n            editCountTests();\n        });\n\n        describe('Custom fields', function() {\n            beforeEach(function() {\n                saveSpyFunc = options => {\n                    expect(options.data['extra_data.' + jsonFieldName])\n                        .toBe('My Value');\n                    return Promise.resolve();\n                };\n            });\n\n            setupFieldTests({\n                fieldID: 'my_custom',\n                jsonFieldName: 'my_custom',\n                selector: '#field_my_custom',\n                useExtraData: true,\n            });\n\n            hasEditorTest();\n            savingTest();\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Custom rich-text field', function() {\n            beforeEach(function() {\n                saveSpyFunc = options => {\n                    expect(options.data['extra_data.' + jsonFieldName])\n                        .toBe('My Value');\n                    return Promise.resolve();\n                };\n            });\n\n            setupFieldTests({\n                supportsRichText: true,\n                fieldID: 'my_rich_text_custom',\n                jsonFieldName: 'my_rich_text_custom',\n                selector: '#field_my_rich_text_custom',\n                useExtraData: true,\n            });\n\n            it('Initial rich text state', function() {\n                expect(fieldEditor.textEditor.richText).toBe(true);\n            });\n\n            hasEditorTest();\n            richTextSavingTest();\n            inlineEditorResizeTests();\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Custom rich-text field with special name', function() {\n            beforeEach(function() {\n                saveSpyFunc = options => {\n                    expect(options.data['extra_data.' + jsonFieldName])\n                        .toBe('My Value');\n                    return Promise.resolve();\n                };\n            });\n\n            setupFieldTests({\n                supportsRichText: true,\n                fieldID: 'text',\n                jsonFieldName: 'text',\n                selector: '#field_text',\n                useExtraData: true,\n            });\n\n            hasEditorTest();\n            richTextSavingTest();\n            inlineEditorResizeTests();\n            editCountTests();\n            securityTests();\n        });\n\n        describe('Custom checkbox field', function() {\n            beforeEach(function() {\n                $field = view.$('#field_checkbox');\n\n                saveSpyFunc = options => {\n                    expect(options.data['extra_data.checkbox'])\n                        .toBe(true);\n                    return Promise.resolve();\n                };\n                reviewRequest.draft.save.and.callFake(saveSpyFunc);\n            });\n\n            it('Saves', function() {\n                const expectedData = {\n                    'extra_data.checkbox': true,\n                };\n\n                $field.click();\n\n                expect(reviewRequest.draft.save).toHaveBeenCalled();\n                expect(reviewRequest.draft.save.calls.argsFor(0)[0].data)\n                    .toEqual(expectedData);\n            });\n        });\n    });\n\n    describe('File attachments', function() {\n        it('Rendering when added', function() {\n            spyOn(RB.FileAttachmentThumbnail.prototype, 'render')\n                .and.callThrough();\n\n            expect($filesContainer.find('.file-container').length).toBe(0);\n\n            view.render();\n            editor.createFileAttachment();\n\n            expect(RB.FileAttachmentThumbnail.prototype.render)\n                .toHaveBeenCalled();\n            expect($filesContainer.find('.file-container').length).toBe(1);\n        });\n\n        describe('Events', function() {\n            let fileAttachment;\n            let $thumbnail;\n\n            beforeEach(function() {\n                view.render();\n                fileAttachment = editor.createFileAttachment();\n\n                $thumbnail = $($filesContainer.find('.file-container')[0]);\n                expect($thumbnail.length).toBe(1);\n            });\n\n            describe('beginEdit', function() {\n                it('Increment edit count', function() {\n                    expect(editor.get('editCount')).toBe(0);\n\n                    $thumbnail.find('.file-caption .edit')\n                        .data('inline-editor')\n                        .startEdit();\n\n                    expect(editor.get('editCount')).toBe(1);\n                });\n            });\n\n            describe('endEdit', function() {\n                describe('Decrement edit count', function() {\n                    let $caption;\n                    let inlineEditorView;\n\n                    beforeEach(function() {\n                        expect(editor.get('editCount')).toBe(0);\n\n                        $caption = $thumbnail.find('.file-caption .edit');\n                        inlineEditorView = $caption.data('inline-editor');\n                        inlineEditorView.startEdit();\n                    });\n\n                    it('On cancel', function() {\n                        inlineEditorView.cancel();\n                        expect(editor.get('editCount')).toBe(0);\n                    });\n\n                    it('On submit', function(done) {\n                        spyOn(fileAttachment, 'ready').and.resolveTo();\n                        spyOn(fileAttachment, 'save').and.resolveTo();\n\n                        $thumbnail.find('input')\n                            .val('Foo')\n                            .triggerHandler('keyup');\n\n                        inlineEditorView.submit();\n\n                        _.defer(() => {\n                            expect(editor.get('editCount')).toBe(0);\n                            done();\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    describe('Methods', function() {\n        describe('getFieldView', function() {\n            it('Correct field is returned', function() {\n                const fieldView = view.getFieldView('target_groups');\n                expect(fieldView).not.toBe(undefined);\n                expect(fieldView.fieldID).toBe('target_groups');\n\n                expect(view.getFieldView('some_random_id')).toBe(undefined);\n            });\n        });\n    });\n\n    describe('Screenshots', function() {\n        describe('Importing on render', function() {\n            it('No screenshots', function() {\n                view.render();\n\n                expect(editor.get('screenshots').length).toBe(0);\n            });\n\n            it('With screenshots', function() {\n                const screenshots = editor.get('screenshots');\n\n                $screenshotsContainer.append(\n                    screenshotThumbnailTemplate({ id: 42 }));\n\n                spyOn(RB.ScreenshotThumbnail.prototype, 'render')\n                    .and.callThrough();\n\n                view.render();\n\n                expect(RB.ScreenshotThumbnail.prototype.render)\n                    .toHaveBeenCalled();\n                expect(screenshots.length).toBe(1);\n                expect(screenshots.at(0).id).toBe(42);\n            });\n        });\n\n        describe('Events', function() {\n            let $thumbnail;\n            let screenshot;\n\n            beforeEach(function() {\n                $thumbnail = $(screenshotThumbnailTemplate({ id: 42 }))\n                    .appendTo($screenshotsContainer);\n\n                view.render();\n\n                screenshot = editor.get('screenshots').at(0);\n            });\n\n            describe('beginEdit', function() {\n                it('Increment edit count', function() {\n                    expect(editor.get('editCount')).toBe(0);\n\n                    $thumbnail.find('.screenshot-caption .edit')\n                        .inlineEditor('startEdit');\n\n                    expect(editor.get('editCount')).toBe(1);\n                });\n            });\n\n            describe('endEdit', function() {\n                describe('Decrement edit count', function() {\n                    let $caption;\n\n                    beforeEach(function() {\n                        expect(editor.get('editCount')).toBe(0);\n\n                        $caption = $thumbnail.find('.screenshot-caption .edit')\n                            .inlineEditor('startEdit');\n                    });\n\n                    it('On cancel', function() {\n                        $caption.inlineEditor('cancel');\n                        expect(editor.get('editCount')).toBe(0);\n                    });\n\n                    it('On submit', function(done) {\n                        spyOn(screenshot, 'ready').and.resolveTo();\n                        spyOn(screenshot, 'save').and.resolveTo();\n\n                        $thumbnail.find('input')\n                            .val('Foo')\n                            .triggerHandler('keyup');\n\n                        $caption.inlineEditor('submit');\n\n                        _.defer(() => {\n                            expect(editor.get('editCount')).toBe(0);\n                            done();\n                        });\n                    });\n                });\n            });\n        });\n    });\n\n    describe('beforeUnload event handler', function() {\n        /*\n         * The components in ReviewablePageView uses editCount to determine how\n         * many fields are being modified at the time, whereas editable/\n         * statusEditable is only used in ReviewRequestEditorView.\n         * So test both editable/statusEditable states to catch regressions\n         * where onBeforeUnload becomes tied to editable/statusEditable states.\n         */\n        describe('editable=true', function() {\n            beforeEach(function() {\n                editor.set('statusEditable', true);\n                editor.set('editable', true);\n\n                expect(editor.get('statusEditable')).toBe(true);\n                expect(editor.get('editable')).toBe(true);\n                expect(editor.get('editCount')).toBe(0);\n            });\n\n            it('Warn user beforeUnload when editing', function() {\n                view.model.incr('editCount');\n                expect(editor.get('editCount')).toBe(1);\n\n                expect(view._onBeforeUnload($.Event('beforeunload'))).toBeDefined();\n            });\n\n            it(\"Don't warn user beforeUnload when not editing\", function() {\n                expect(view._onBeforeUnload($.Event('beforeunload'))).toBeUndefined();\n            });\n        });\n\n        describe('editable=false', function() {\n            beforeEach(function() {\n                editor.set('statusEditable', false);\n                editor.set('editable', false);\n\n                expect(editor.get('statusEditable')).toBe(false);\n                expect(editor.get('editable')).toBe(false);\n                expect(editor.get('editCount')).toBe(0);\n            });\n\n            it('Warn user beforeUnload when editing', function() {\n                view.model.incr('editCount');\n                expect(editor.get('editCount')).toBe(1);\n\n                expect(view._onBeforeUnload($.Event('beforeunload'))).toBeDefined();\n            });\n\n            it(\"Don't warn user beforeUnload when not editing\", function() {\n                expect(view._onBeforeUnload($.Event('beforeunload'))).toBeUndefined();\n            });\n        });\n    });\n});\n"],"mappings":"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"}